'program to find even or odd'

def iseven(n):
    return n&1
n=int(input())
if iseven(n):
    print('odd')
else:
    print('even')
    
    
'we can find multiplication and division by using left shift and right shift'
'Bit wise right shift'
Example 1:
a = 10 = 0000 1010 (Binary)
a >> 1 = 0000 0101 = 5

Example 2:
a = -10 = 1111 0110 (Binary)
a >> 1 = 1111 1011 = -5 

'Bit wise left shift'
Example 1:
a = 5 = 0000 0101 (Binary)
a << 1 = 0000 1010 = 10
a << 2 = 0001 0100 = 20 

Example 2:
b = -10 = 1111 0110 (Binary)
b << 1 = 1110 1100 = -20
b << 2 = 1101 1000 = -40

'using lambda function'
x = lambda a,b,c,d: a * b*c*d
print(x(5,6,7,8))
ans=1680
'using __str__ method'
'normally if we has to print the data inside the function we has take the class as reference but by using str function we can print the data'

without __str__

class Tarun:
    def __init__(self,i,name):
        self.i=i
        self.name=name
    
x=Tarun(1,'goru')
print(x)
o/p:<__main__.Tarun object at 0x7fa269a30310>

with __str__

class Tarun:
    def __init__(self,i,name):
        self.i=i
        self.name=name
    def __str__(self):
        return '{} {}'.format(self.i,self.name)
x=Tarun(1,'goru')
print(x)
o/p:1 goru
